<?php

namespace App\Filament\Resources\ProductResource\Pages;

use App\Filament\Resources\ProductResource;
use App\Models\Item;
use App\Models\ProductUnit;
use Filament\Resources\Pages\CreateRecord;
use Illuminate\Database\Eloquent\Model;

class CreateProduct extends CreateRecord
{
    protected static string $resource = ProductResource::class;

    protected function handleRecordCreation(array $data): Model
    {
        $unitId = $data['product_unit_id'];

        $quantity = 0;

        $defaultProductUnitData = [
            'unit_id' => $unitId,
            'count' => 1,
            'barCode' => $data['barCode'],
            'purchasePrice' => $data['purchasePrice'],
            'retailSalePrice' => $data['retailSalePrice'],
            'minRetailSalePrice' => $data['minRetailSalePrice'],
            'wholesaleSalePrice' => $data['wholesaleSalePrice'],
            'minWholesaleSalePrice' => $data['minWholesaleSalePrice'],
            'isMainUnit' => true,
        ];

        $store = $data['store'];

        if(isset($data['quantity'])) {
            $quantity += intval($data['quantity']);
        }

        $subUnits = [];

        foreach ($data['sub_units'] as $unit) {
            $unitData = $unit['data'];
            $unitData['isMainUnit'] = false;

            if(isset($unitData['quantity'])) {
                $quantity += intval($unitData['quantity']) * intval($unitData['count'] ?? '1');
            }
            unset($unitData['quantity']);
            $subUnits[] = $unitData;
        }

        // reset default unit id
        $data['product_unit_id'] = null;

        unset($data['sub_units']);
        unset($data['store']);
        unset($data['quantity']);

        $created = static::getModel()::create($data);

        $defaultProductUnitData['product_id'] = $created->id;

        $createDefaultUnit = ProductUnit::create($defaultProductUnitData);

        foreach ($subUnits as $unit) {
            $unit['product_id'] = $created->id;
            ProductUnit::create($unit);
        }

        $created->product_unit_id = $createDefaultUnit->id;

        $created->update($created->toArray());

        Item::createNewItem([
            'product_id' => $created->id,
            'store_id' => $store,
            'invoice_id' => null,
            'quantity' =>  $quantity,
            'purchasePrice' => $data['purchasePrice'],
            'retailSalePrice' => $data['retailSalePrice'],
            'minRetailSalePrice' => $data['minRetailSalePrice'],
            'wholesaleSalePrice' => $data['wholesaleSalePrice'],
            'minWholesaleSalePrice' => $data['minWholesaleSalePrice'],
            'expireDate' => null,
        ]);

        return $created; // TODO: Change the autogenerated stub
    }


//    protected function handleRecordCreation(array $data): Model
//    {
//        return static::getModel()::create($data);
//    }

    protected function getRedirectUrl(): string
    {
        return $this->getResource()::getUrl('index');
    }
}
